/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package lk.gymapp.view;

import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import lk.gymapp.controller.MemberController;
import lk.gymapp.model.Member;

/**
 *
 * @author sachii
 */
public class MemberViews extends javax.swing.JFrame {

    /**
     * Creates new form CustomerViews
     */
    public MemberViews() {
        initComponents();
        searchAllMembers();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        gymNameTxt = new javax.swing.JTextField();
        gymIdTxt = new javax.swing.JTextField();
        gymNicTxt = new javax.swing.JTextField();
        gymContactTxt = new javax.swing.JTextField();
        gymIdlable3 = new javax.swing.JLabel();
        add = new javax.swing.JButton();
        search = new javax.swing.JButton();
        updateButton = new javax.swing.JButton();
        deleteButton = new javax.swing.JButton();
        gymIdlable2 = new javax.swing.JLabel();
        gymIdlable1 = new javax.swing.JLabel();
        gymIdlable = new javax.swing.JLabel();
        headLable = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        gymTble = new javax.swing.JTable();
        backGroundLable = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel1.setBackground(new java.awt.Color(0, 0, 0));
        jPanel1.setBorder(javax.swing.BorderFactory.createEmptyBorder(1, 1, 1, 1));
        jPanel1.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        jPanel1.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        gymNameTxt.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        gymNameTxt.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        gymNameTxt.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        gymNameTxt.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                gymNameTxtActionPerformed(evt);
            }
        });
        jPanel1.add(gymNameTxt, new org.netbeans.lib.awtextra.AbsoluteConstraints(160, 220, 250, 20));

        gymIdTxt.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        gymIdTxt.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        gymIdTxt.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        gymIdTxt.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                gymIdTxtActionPerformed(evt);
            }
        });
        jPanel1.add(gymIdTxt, new org.netbeans.lib.awtextra.AbsoluteConstraints(160, 180, 250, 20));

        gymNicTxt.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        gymNicTxt.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        gymNicTxt.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        gymNicTxt.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                gymNicTxtActionPerformed(evt);
            }
        });
        jPanel1.add(gymNicTxt, new org.netbeans.lib.awtextra.AbsoluteConstraints(160, 260, 250, 20));

        gymContactTxt.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        gymContactTxt.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        gymContactTxt.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        gymContactTxt.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                gymContactTxtActionPerformed(evt);
            }
        });
        jPanel1.add(gymContactTxt, new org.netbeans.lib.awtextra.AbsoluteConstraints(160, 300, 250, 20));

        gymIdlable3.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        gymIdlable3.setForeground(new java.awt.Color(255, 153, 51));
        gymIdlable3.setText("CONTACT");
        jPanel1.add(gymIdlable3, new org.netbeans.lib.awtextra.AbsoluteConstraints(60, 300, 70, 20));

        add.setBackground(new java.awt.Color(255, 0, 0));
        add.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        add.setForeground(new java.awt.Color(255, 255, 255));
        add.setText("ADD");
        add.setToolTipText("");
        add.setBorder(javax.swing.BorderFactory.createEmptyBorder(1, 1, 1, 1));
        add.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                addMouseClicked(evt);
            }
        });
        add.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addActionPerformed(evt);
            }
        });
        jPanel1.add(add, new org.netbeans.lib.awtextra.AbsoluteConstraints(60, 350, 80, 30));

        search.setBackground(new java.awt.Color(255, 51, 51));
        search.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        search.setForeground(new java.awt.Color(255, 255, 255));
        search.setText("SEARCH");
        search.setBorder(javax.swing.BorderFactory.createEmptyBorder(1, 1, 1, 1));
        search.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                searchActionPerformed(evt);
            }
        });
        jPanel1.add(search, new org.netbeans.lib.awtextra.AbsoluteConstraints(330, 350, 80, 30));

        updateButton.setBackground(new java.awt.Color(255, 0, 0));
        updateButton.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        updateButton.setForeground(new java.awt.Color(255, 255, 255));
        updateButton.setText("UPDATE");
        updateButton.setBorder(javax.swing.BorderFactory.createEmptyBorder(1, 1, 1, 1));
        updateButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                updateButtonActionPerformed(evt);
            }
        });
        jPanel1.add(updateButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(240, 350, 80, 30));

        deleteButton.setBackground(new java.awt.Color(255, 0, 0));
        deleteButton.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        deleteButton.setForeground(new java.awt.Color(255, 255, 255));
        deleteButton.setText("DELETE");
        deleteButton.setBorder(javax.swing.BorderFactory.createEmptyBorder(1, 1, 1, 1));
        deleteButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                deleteButtonActionPerformed(evt);
            }
        });
        jPanel1.add(deleteButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(150, 350, 80, 30));

        gymIdlable2.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        gymIdlable2.setForeground(new java.awt.Color(255, 153, 51));
        gymIdlable2.setText("NIC");
        jPanel1.add(gymIdlable2, new org.netbeans.lib.awtextra.AbsoluteConstraints(60, 260, 70, 20));

        gymIdlable1.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        gymIdlable1.setForeground(new java.awt.Color(255, 153, 51));
        gymIdlable1.setText("NAME");
        jPanel1.add(gymIdlable1, new org.netbeans.lib.awtextra.AbsoluteConstraints(60, 220, 70, 20));

        gymIdlable.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        gymIdlable.setForeground(new java.awt.Color(255, 153, 51));
        gymIdlable.setText("GYM ID");
        jPanel1.add(gymIdlable, new org.netbeans.lib.awtextra.AbsoluteConstraints(60, 180, 70, 20));

        headLable.setBackground(new java.awt.Color(255, 51, 102));
        headLable.setFont(new java.awt.Font("Swis721 Ex BT", 1, 48)); // NOI18N
        headLable.setForeground(new java.awt.Color(50, 141, 186));
        headLable.setText("GYM APP ");
        headLable.setVerticalAlignment(javax.swing.SwingConstants.BOTTOM);
        jPanel1.add(headLable, new org.netbeans.lib.awtextra.AbsoluteConstraints(60, 50, 360, 50));

        gymTble.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        gymTble.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "GYM ID", "NAME", "NIC", "CONTACT"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(gymTble);

        jPanel1.add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(450, 180, -1, 200));

        backGroundLable.setFont(new java.awt.Font("Comic Sans MS", 0, 12)); // NOI18N
        backGroundLable.setForeground(new java.awt.Color(255, 255, 255));
        backGroundLable.setIcon(new javax.swing.ImageIcon("C:\\Users\\sachii\\Downloads\\Gemini_Generated_Image_4t26734t26734t26.jpg")); // NOI18N
        backGroundLable.setOpaque(true);
        jPanel1.add(backGroundLable, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 970, 470));

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void gymNameTxtActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_gymNameTxtActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_gymNameTxtActionPerformed

    private void gymIdTxtActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_gymIdTxtActionPerformed
        String id = gymIdTxt.getText();

        String url = "jdbc:mysql:// localhost:3306/gymapp";
        String userName = "root";
        String password = "1234";

        // get databse connection
        Connection connection = null;
        PreparedStatement preparedStatement = null;
        ResultSet result = null;

        //SQL QUERY TO SEARCH THIS IN MEMBER TABLE
        String sql = "SELECT*FROM members WHERE gym_id = ?";

        try {
            //LOAD JDBC DRIVER
            Class.forName("com.mysql.cj.jdbc.Driver");

            //CREATE CONNECTION
            connection = DriverManager.getConnection(url, userName, password);

            //PREPARE SQL STATEMENT
            preparedStatement = connection.prepareStatement(sql);
            preparedStatement.setString(1, id);

            result = preparedStatement.executeQuery();
            if (result.next()) {
                String rsId = result.getString("gym_id");
                String rsName = result.getString("name");
                String rsNic = result.getString("nic");
                int rsContact = result.getInt("contact");

                gymNameTxt.setText(rsName);
                gymNicTxt.setText(rsNic);
                gymContactTxt.setText("" + rsContact);
            }
        } catch (ClassNotFoundException | SQLException ex) {
            JOptionPane.showMessageDialog(this, ex.getMessage());
        } finally {
            try {
                if (connection != null) {
                    connection.close();
                }
                if (preparedStatement != null) {
                    preparedStatement.close();
                }
                if (result != null) {
                    result.close();
                }
            } catch (SQLException ex) {
                JOptionPane.showMessageDialog(this, ex.getMessage());
            }

        }


    }//GEN-LAST:event_gymIdTxtActionPerformed

    private void gymNicTxtActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_gymNicTxtActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_gymNicTxtActionPerformed

    private void addActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addActionPerformed
        try {
            //VARIABLES
            String id = gymIdTxt.getText();
            String name = gymNameTxt.getText();
            String nic = gymNicTxt.getText();
            int contact = Integer.parseInt(gymContactTxt.getText());

            Member m = new Member(id, name, nic, contact);
            boolean b = MemberController.addMember(m);

            if (b == true ) {
                JOptionPane.showMessageDialog(this, "ADDED SUCCESSFULLY ");
                ClearMemberField();
                searchAllMembers();
            }

        } catch (ClassNotFoundException | SQLException ex) {
            Logger.getLogger(MemberViews.class.getName()).log(Level.SEVERE, null, ex);
        }

    }//GEN-LAST:event_addActionPerformed

    private void gymContactTxtActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_gymContactTxtActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_gymContactTxtActionPerformed

    private void addMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_addMouseClicked
        // TODO add your handling code here:
    }//GEN-LAST:event_addMouseClicked

    private void searchActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_searchActionPerformed
   try {
        String id = gymIdTxt.getText();
        
        
        
        Member foundMember = MemberController.searchMember(id);
        
        if (foundMember != null) {
            
            gymNameTxt.setText(foundMember.getName());
            gymNicTxt.setText(foundMember.getNic());
            gymContactTxt.setText(""+foundMember.getContact());
        } else {
            JOptionPane.showMessageDialog(this, "No member found " + id);
            ClearMemberField();
            searchAllMembers();
        }
        
    } catch (ClassNotFoundException ex) {
        JOptionPane.showMessageDialog(this,ex.getMessage());
    } catch (SQLException ex) {
        JOptionPane.showMessageDialog(this,ex.getMessage());
    }

    }//GEN-LAST:event_searchActionPerformed

    private void updateButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_updateButtonActionPerformed
        try {
            String id = gymIdTxt.getText();
            String name = gymNameTxt.getText();
            String nic = gymNicTxt.getText();
            int contact = Integer.parseInt(gymContactTxt.getText());
            Member updateMember = new Member(id,name ,nic,contact);
            boolean updatedMember = MemberController.updateMember(updateMember);
            
            if (updatedMember) {
                JOptionPane.showMessageDialog(this, "UPDATE SUCCESFULL");
                ClearMemberField();
                searchAllMembers();
            } else {
                JOptionPane.showMessageDialog(this, "NO MEMBER FOUND");
            }
        } catch (ClassNotFoundException | SQLException ex) {
            Logger.getLogger(MemberViews.class.getName()).log(Level.SEVERE, null, ex);
        }

       
        
    }//GEN-LAST:event_updateButtonActionPerformed

    private void deleteButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_deleteButtonActionPerformed
        try {
            String id = gymIdTxt.getText();
            
            boolean d = MemberController.deleteMember(id);
            if (d == true ) {
                JOptionPane.showMessageDialog(this, "DELETE SUCCESSFULL ");
                ClearMemberField();
                searchAllMembers();
            }
        } catch (SQLException | ClassNotFoundException ex) {
            Logger.getLogger(MemberViews.class.getName()).log(Level.SEVERE, null, ex);
        }
        
        
    }//GEN-LAST:event_deleteButtonActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(MemberViews.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(MemberViews.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(MemberViews.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(MemberViews.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new MemberViews().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton add;
    private javax.swing.JLabel backGroundLable;
    private javax.swing.JButton deleteButton;
    private javax.swing.JTextField gymContactTxt;
    private javax.swing.JTextField gymIdTxt;
    private javax.swing.JLabel gymIdlable;
    private javax.swing.JLabel gymIdlable1;
    private javax.swing.JLabel gymIdlable2;
    private javax.swing.JLabel gymIdlable3;
    private javax.swing.JTextField gymNameTxt;
    private javax.swing.JTextField gymNicTxt;
    private javax.swing.JTable gymTble;
    private javax.swing.JLabel headLable;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JButton search;
    private javax.swing.JButton updateButton;
    // End of variables declaration//GEN-END:variables
    public void ClearMemberField() {
        gymIdTxt.setText("");
        gymNameTxt.setText("");
        gymNicTxt.setText("");
        gymContactTxt.setText("");
    }

    public void searchAllMembers() {
        String url = "jdbc:mysql://localhost:3306/gymapp";
        String userName = "root";
        String password = "1234";
        ResultSet rst = null;

        DefaultTableModel dtm = (DefaultTableModel) gymTble.getModel();
        dtm.setRowCount(0);

        Connection connection = null;
        PreparedStatement preparedStatement = null;
        String sql = "SELECT*FROM members";

        try {
            Class.forName("com.mysql.cj.jdbc.Driver");
            connection = DriverManager.getConnection(url, userName, password);
            preparedStatement = connection.prepareStatement(sql);

            rst = preparedStatement.executeQuery();
            while (rst.next()) {
                String rsId = rst.getString("gym_id");
                String rsName = rst.getString("name");
                String rsNic = rst.getString("nic");
                int rsContact = rst.getInt("contact");

                dtm.addRow(new Object[]{rsId, rsName, rsNic, rsContact});
            }
        } catch (ClassNotFoundException ex) {
            JOptionPane.showMessageDialog(this, ex.getMessage());
        } catch (SQLException ex) {
            JOptionPane.showMessageDialog(this, ex.getMessage());
        }
    }

}
